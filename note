#!/bin/bash

YEAR=$(date +'%Y')
MONTH=$(date +'%m')
DAY=$(date +'%d')
NOTE_DIR="$HOME/notes/$YEAR/$MONTH"
NOTE_NAME="$DAY.md"

NOTERC="${XDG_CONFIG_HOME:-$HOME}/notekeeper/noterc"
if [ -f "$NOTERC" ]; then source "$NOTERC"; fi

create_note() {
    if [ ! -f "$NOTE_DIR/$NOTE_NAME" ]; then
        mkdir -p "$NOTE_DIR"
        touch "$NOTE_DIR/$NOTE_NAME"
        printf "$DAY-$MONTH-$YEAR\n---\n\n" >"$NOTE_DIR/$NOTE_NAME"
        printf "Created new note: $NOTE_DIR/$NOTE_NAME\n"
    else
        printf "Note \"$NOTE_DIR/$NOTE_NAME\" already exists. Saving changes to existing file.\n"
    fi
}

print_info() {
    printf "Note preview:\n====================\n\n"
    head -n 8 "$NOTE_DIR/$NOTE_NAME"
    printf "\n====================\n"
    printf "Note Stats:\n"
    stat "$NOTE_DIR/$NOTE_NAME"
    printf "\n====================\n"
    printf "File Information:\n"
    ls -lah "$NOTE_DIR/$NOTE_NAME"
}

print_help() {
    printf "note - Note Keeper 0.4.1 (20 July 2020)

Usage: note [arguments]

Arguments:
  -h | --help                         Display usage guide.
  -e | --edit <DATE: year-month-day>  Open a specific note for editing.
  -p | --print                        Print the contents of a note.
  -c | --create                       Create a note but don't open it for editing.
  -n | --name                         Set filename for note. Will be created in \$NOTE_DIR
                                      Don't forget an extension like .md
  -i | --info                         Print information about a note.

The script loads configuration variables from \${XDG_CONFIG_HOME:-\$HOME}/notekeeper/noterc.

Example:
# Directory where the current note should be stored
NOTE_DIR=\"\$HOME/notes/\$YEAR/\$MONTH\"

# Name of the Note
NOTE_NAME=\"\$DAY.md\"\n"
}

open_note() {
    if [[ $EDITOR = *"vim"* ]] || [[ $EDITOR = *"nvim"* ]]; then
        # Open Vim or Neovim in insert mode.
        $EDITOR "+normal G$" +startinsert! "$NOTE_DIR/$NOTE_NAME"
    elif [[ $EDITOR = *"emacs"* ]]; then
        # Open Emacs with cursor at EOF.
        emacs -nw "$NOTE_DIR/$NOTE_NAME" --eval "(goto-char (point-max))"
    elif [[ $EDITOR = "" ]]; then
        # If no default editor, use Vim and open in insert mode.
        vim "+normal G$" +startinsert! "$NOTE_DIR/$NOTE_NAME"
    else
        $EDITOR "$NOTE_DIR/$NOTE_NAME"
    fi
}

if (($# > 0)); then
    while [[ $# -gt 0 ]]; do
        key="$1"
        case $key in
        -e | --edit)
            printf "(e)dit is not yet implemented :(\n"
            exit 0
            ;;
        -p | --print)
            cat "$NOTE_DIR/$NOTE_NAME"
            ;;
        -c | --create)
            create_note
            ;;
        -i | --info)
            print_info
            ;;
        -n | --name)
            NOTE_NAME="$2"
            if [ -z "$NOTE_NAME" ]; then printf "No name found. Please provide a name.\n" && exit 1; fi
            create_note
            open_note
            shift
            ;;
        -h | --help)
            print_help
            ;;
        *)
            printf "Unknown Argument \"$1\"\n"
            printf "Try \"note --help\" to see usage information.\n"
            ;;
        esac
        shift
    done
else
    create_note
    open_note
fi
